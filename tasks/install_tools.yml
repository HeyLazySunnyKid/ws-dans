---
### Install tool {{{

- name: "Install dnf package: {{ tool.name }}"
  become: yes
  dnf:
    name: "{{ tool.name }}"
    state: latest
  when: tool.type is undefined or tool.type == "dnf"
  tags: pkgs

- name: "Install pip2 package: {{ tool.name }}"
  become: yes
  pip:
    name: "{{ tool.name }}"
    executable: pip2
    state: latest
  when: tool.type is defined and tool.type == "pip2"
  tags: pkgs

- name: "Install pip3 package: {{ tool.name }}"
  become: yes
  pip:
    name: "{{ tool.name }}"
    executable: pip3
    state: latest
  when: tool.type is defined and tool.type == "pip3"
  tags: pkgs

- name: "Install npm package: {{ tool.name }}"
  become: yes
  npm:
    name: "{{ tool.name }}"
    global: yes
    state: latest
  when: tool.type is defined and tool.type == "npm"
  tags: pkgs

### }}}

- name: "Install {{ tool.name }} dependencies"
  block:
    - name: "Install dnf dependencies of {{ tool.name }}"
      become: yes
      dnf:
        name: "{{ tool.deps.dnf }}"
        state: latest
      when: tool.deps.dnf is defined
      tags: pkgs

    - name: "Install pip2 dependencies of {{ tool.name }}"
      become: yes
      pip:
        name: "{{ tool.deps.pip2 }}"
        executable: pip2
        state: latest
      when: tool.deps.pip2 is defined
      tags: pkgs

    - name: "Install pip3 dependencies of {{ tool.name }}"
      become: yes
      pip:
        name: "{{ tool.deps.pip3 }}"
        executable: pip3
        state: latest
      when: tool.pip3 is defined
      tags: pkgs

    - name: "Install npm dependencies of {{ tool.name }}"
      become: yes
      npm:
        name: "{{ tool.deps.npm }}"
        global: yes
        state: latest
      when: tool.deps.npm is defined
      tags: pkgs

- name: "Run incude_tasks for {{ tool.name }}"
  include_tasks: "include_tasks/{{ tool.include_tasks }}"
  when: tool.include_tasks is defined
  tags: always

  # TODO: restart services when config changed
- name: "Place {{ tool.name }} config"
  when: tool.config is defined
  block:

    # If files places not under the home, that mean we should escalate
    # privileges
    - name: "create {{ tool.name }} directory by root"
      become: "{{ item.dest[0] != '~' | ternary('yes', 'no')}}"
      file:
        path: "{{ item.dest | dirname }}"
        state: directory
      loop: "{{ tool.config }}"
      loop_control:
        label: "{{ item.dest | dirname }}"

    - name: "copy {{ tool.name }} file confs by root"
      become: "{{ item.dest[0] != '~' | ternary('yes', 'no')}}"
      copy:
        src: "config/{{ item.src }}"
        dest: "{{ item.dest }}"
        group: "{{ item.group | default(omit) }}"
        mode: "{{ item.mode | default(omit) }}"
        owner: "{{ item.owner | default(omit) }}"
        validate: "{{ item.validate | default(omit) }}"
        backup: "{{ item.backup | default(omit) }}"
      when: "item.src[-3:] != '.j2'"
      loop: "{{ tool.config }}"
      loop_control:
        label: "{{ item.dest }}"

    - name: "template {{ tool.name }} file confs by root"
      become: "{{ item.dest[0] != '~' | ternary('yes', 'no')}}"
      template:
        src: "config/{{ item.src }}"
        dest: "{{ item.dest }}"
        group: "{{ item.group | default(omit) }}"
        mode: "{{ item.mode | default(omit) }}"
        owner: "{{ item.owner | default(omit) }}"
        validate: "{{ item.validate | default(omit) }}"
        backup: "{{ item.backup | default(omit) }}"
      when: "item.src[-3:] == '.j2'"
      loop: "{{ tool.config }}"
      loop_control:
        label: "{{ item.dest }}"

- name: Start and enable tool's services
  become: yes
  systemd:
    name: "{{ (item[0] == '~') | ternary(item[1:], item)  }}"
    enabled: yes
    state: started
    scope: "{{ (item[0] == '~') | ternary('user', 'system') }}"
  loop: "{{ tool.services | default([]) }}"
